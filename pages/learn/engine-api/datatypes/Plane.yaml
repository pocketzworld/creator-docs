name: Plane
type: datatypes
summary: |
  The Plane data type in Unity represents a plane in 3D space, defined by its normal (a Vector3 representing the direction perpendicular to the plane surface) and its distance from the origin along this normal. 

  Utility of Plane includes geometric computations like calculating intersection points between a line (or ray) and a plane, determining which side of a plane a point is on, or the closest point on the plane to another point in space. 

  This data type is crucial in 3D graphics and physics simulations, serving as a useful tool in many game development scenarios like collision detection, lighting systems, reflection, and more.

  For more in-depth knowledge, refer to the [official Unity documentation](https://docs.unity3d.com/2022.3/Documentation/ScriptReference/Plane.html).
description:
code_samples:
inherits:
constructors:
  - name: new
    summary: |
      The 'new' constructor lets you create a new plane given a normal and a point in 3D space. The normal specifies the plane's orientation, while the point specifies its distance from the origin. The result is a versatile geometric construct used in many algorithms and calculations. More details can be found in the [official Unity documentation](https://docs.unity3d.com/2022.3/Documentation/ScriptReference/Plane-ctor.html).
    description:
    is_static: true
    code_samples:
    parameters:
      - name: normal
        type: DataType.Vector3
        default:
        summary: The normal of the plane.
      - name: point
        type: DataType.Vector3
        default:
        summary: A point in the plane.
    returns:
      - type: DataType.Plane
        summary: Returns a Plane instance with the specified normal and containing the specified point.
properties:
  - name: normal
    summary: |
      The 'normal' property represents the perpendicular direction to the plane's surface (its orientation). This Vector3 normal is unit length and can be used to calculate the orientation of angled surfaces or the angle between two intersecting planes. See the [official Unity documentation](https://docs.unity3d.com/2022.3/Documentation/ScriptReference/Plane-normal.html) for more information.
    description:
    is_static: false
    code_samples:
    type: DataType.Vector3
  - name: distance
    summary: |
      The 'distance' property gives the shortest distance between the plane and the origin, along the plane's normal. This value is often used for computations involving the plane and other 3D objects. Please refer to [Unity's Plane.distance Documentation](https://docs.unity3d.com/2022.3/Documentation/ScriptReference/Plane-distance.html) for further specifics.
    description:
    is_static: false
    code_samples:
    type: number
  - name: flipped
    summary: |
      The 'flipped' property returns a new plane that is identical to this one, but with the normal vector flipped to point in the opposite direction. This altered plane essentially represents the same geometric plane in 3D space but with its front and back sides swapped. View more in [Unity's Plane.flipped Documentation](https://docs.unity3d.com/2022.3/Documentation/ScriptReference/Plane-flipped.html).
    description:
    is_static: false
    code_samples:
    type: DataType.Plane
methods:
  - name: Raycast
    summary: |
      The 'Raycast' method determines if a ray intersects the plane, and if so, how far along the ray the intersection point occurs. This is a commonly performed operation in 3D graphics, useful for scenarios like mouse picking, where you want to determine what object in the 3D world the user has clicked on. See [Unity's Plane.Raycast Documentation](https://docs.unity3d.com/2022.3/Documentation/ScriptReference/Plane.Raycast.html) for more details.
    description:
    is_static: false
    code_samples:
    parameters:
      - name: ray
        type: DataType.Ray
        default:
        summary: The ray to test for intersection.
    returns:
      - type: (boolean, number)
        summary: A tuple containing a boolean that indicates whether the ray intersected the Plane and the distance at which it intersected.
  - name: SetNormalAndPosition
    summary: |
      The 'SetNormalAndPosition' method allows you to alter the plane's normal vector and adjust its position directly, redefining the plane in 3D space. This can be useful when the orientation or position of an existing Plane needs to be adjusted. More information is available in [Unity's Plane.SetNormalAndPosition Documentation](https://docs.unity3d.com/2022.3/Documentation/ScriptReference/Plane.SetNormalAndPosition.html).
    description:
    is_static: false
    code_samples:
    parameters:
      - name: inNormal
        type: DataType.Vector3
        default:
        summary: The new normal of the plane.
      - name: inPoint
        type: DataType.Vector3
        default:
        summary: A new point in the plane.
    returns:
      - type: void
        summary:
  - name: Set3Points
    summary: |
      The 'Set3Points' method recalculates the plane to contain the three specified points. You can consider this as stretching or reshaping the plane to pass through the provided three points in space. This can prove useful when a plane needs to wrap around a newly defined area in space. More context can be found in [Unity's Plane.Set3Points Documentation](https://docs.unity3d.com/2022.3/Documentation/ScriptReference/Plane.Set3Points.html).
    description:
    is_static: false
    code_samples:
    parameters:
      - name: a
        type: DataType.Vector3
        default:
        summary: The first point in 3D space.
      - name: b
        type: DataType.Vector3
        default:
        summary: The second point in 3D space.
      - name: c
        type: DataType.Vector3
        default:
        summary: The third point in 3D space.
    returns:
      - type: void
        summary:
  - name: Flip
    summary: |
      The 'Flip' method flips the plane's normal to point in the opposite direction. This changes which side of the plane is considered the "front". If you have a one-sided surface and want to make it face the other way without moving the plane, 'Flip' can be useful. Check out [Unity's Plane.Flip Documentation](https://docs.unity3d.com/2022.3/Documentation/ScriptReference/Plane.Flip.html) for a better understanding.
    description:
    is_static: false
    code_samples:
    parameters:
    returns:
      - type: void
        summary:
  - name: Translate
    summary: |
      The 'Translate' method moves the plane in 3D space by an offset specified by a Vector3. If you have a defined plane and you want to shift it in space without changing its orientation, this method is a good choice. You can learn more in [Unity's Plane.Translate Documentation](https://docs.unity3d.com/2022.3/Documentation/ScriptReference/Plane.Translate.html).
    description:
    is_static: true
    code_samples:
    parameters:
      - name: plane
        type: DataType.Plane
        default:
        summary: The plane to translate.
      - name: translation
        type: DataType.Vector3
        default:
        summary: The shift in each direction of 3D space.
    returns:
      - type: DataType.Plane
        summary: Returns the translated plane.
  - name: ClosestPointOnPlane
    summary: |
      The 'ClosestPointOnPlane' method determines the point in 3D space that is closest to the given point and lies on the plane. This can be used in several different calculations, for example, if you want to place an object on the plane, but at the position closest to a certain point. More details can be found in [Unity's Plane.ClosestPointOnPlane Documentation](https://docs.unity3d.com/2022.3/Documentation/ScriptReference/Plane.ClosestPointOnPlane.html).
    description:
    is_static: false
    code_samples:
    parameters:
      - name: point
        type: DataType.Vector3
        default:
        summary: The point in 3D space.
    returns:
      - type: DataType.Vector3
        summary: Returns a point on the plane that is closest to the given point.
  - name: GetDistanceToPoint
    summary: |
      The 'GetDistanceToPoint' method calculates the shortest distance from a point in 3D space to the plane. This method is useful when testing whether a point is near a plane within a certain threshold. More information can be found in [Unity's Plane.GetDistanceToPoint Documentation](https://docs.unity3d.com/2022.3/Documentation/ScriptReference/Plane.GetDistanceToPoint.html).
    description:
    is_static: false
    code_samples:
    parameters:
      - name: point
        type: DataType.Vector3
        default:
        summary: The point from which the distance is calculated.
    returns:
      - type: number
        summary: Returns the shortest distance from the point to the plane.
  - name: GetSide
    summary: |
      The 'GetSide' method determines which side of the plane a given point is on. This can be useful when sorting points based on their position relative to the plane. For further insights, you can visit [Unity's Plane.GetSide Documentation](https://docs.unity3d.com/2022.3/Documentation/ScriptReference/Plane.GetSide.html).
    description:
    is_static: false
    code_samples:
    parameters:
      - name: point
        type: DataType.Vector3
        default:
        summary: The point to test for side.
    returns:
      - type: boolean
        summary: Returns 'true' if the point is on the same side as the plane normal.
  - name: SameSide
    summary: |
      The 'SameSide' method checks if two points are on the same side of the plane. This is useful in situations like determining if two objects are on the same side of a game level or a wall, for example. More context can be gathered from [Unity's Plane.SameSide Documentation](https://docs.unity3d.com/2022.3/Documentation/ScriptReference/Plane.SameSide.html).
    description:
    is_static: false
    code_samples:
    parameters:
      - name: inPt0
        type: DataType.Vector3
        default:
        summary: The first point.
      - name: inPt1
        type: DataType.Vector3
        default:
        summary: The second point.
    returns:
      - type: boolean
        summary: Returns 'true' if the two points are on the same side of the plane.
  - name: Translate
    summary: |
      The 'Translate' method provides a modified plane that is translated by the given Vector3 and does not change its normal direction. It is useful when needing to move a defined plane to a new location in 3D space. For more details, visit [Unity's Plane.Translate Documentation](https://docs.unity3d.com/2022.3/Documentation/ScriptReference/Plane.Translate.html).
    description:
    is_static: true
    code_samples:
    parameters:
      - name: plane
        type: DataType.Plane
        default:
        summary: The defined plane to translate.
      - name: translation
        type: DataType.Vector3
        default:
        summary: The adjust in 3D space.
    returns:
      - type: DataType.Plane
        summary: Returns a new Plane instance that's been translated.
math_operations:
