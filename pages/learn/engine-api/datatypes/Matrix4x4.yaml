name: Matrix4x4
type: datatypes
summary: |
  Unity's Matrix4x4 datatype operates as the cornerstone in modeling transformations in 3D space, holding critical data about translations, rotations, and scaling. Think of it as the mathematical blueprint that instructs your 3D objects on how to transform from one state to another â€“ a fundamental tool in creating dynamic and interactive 3D environments. Like a guiding chart for your 3D objects, impacting how they move, turn, and resize in the 3D realm. For in-depth understanding and practical application scenarios, peruse through the [Matrix4x4 section from the official Unity Documentation](https://docs.unity3d.com/2022.3/Documentation/ScriptReference/Matrix4x4.html).
description:
code_samples:
inherits:
constructors:
  - name: new
    summary: |
      The 'new' constructor creates a new Matrix4x4 instance given four Vector4 inputs for each column of the matrix. In other words, it constructs a 4x4 matrix using four 4-dimensional vectors. For more details, see the [official Unity documentation on Matrix4x4.new](https://docs.unity3d.com/2022.3/Documentation/ScriptReference/Matrix4x4-ctor.html).
    description:
    is_static: false
    code_samples:
    parameters:
      - name: column0
        type: DataType.Vector4
        default:
        summary: This is the first column vector of the 4x4 matrix.
      - name: column1
        type: DataType.Vector4
        default:
        summary: This is the second column vector of the 4x4 matrix.
      - name: column2
        type: DataType.Vector4
        default:
        summary: This is the third column vector of the 4x4 matrix.
      - name: column3
        type: DataType.Vector4
        default:
        summary: This is the fourth column vector of the 4x4 matrix.
    returns:
      - type: DataType.Matrix4x4
        summary: Returns a new Matrix4x4 instance.
properties:
  - name: rotation
    summary: |
      The 'rotation' property is a Quaternion that represents the rotation part of this matrix. Accessing this property can be particularly useful if you want to extract the rotation information of a Matrix4x4 instance. You can learn more from the [official Unity documentation on Matrix4x4.rotation](https://docs.unity3d.com/2022.3/Documentation/ScriptReference/Matrix4x4-rotation.html).
    description:
    is_static: false
    code_samples:
    type: DataType.Quaternion
  - name: lossyScale
    summary: |
      The 'lossyScale' property returns a Vector3 representing the scale of the matrix. If the matrix has a uniform scale (the same scale along all axes), 'lossyScale' will correctly report it. If the matrix has a non-uniform scale (different scales along different axes), 'lossyScale' will not accurately reflect it. More information is available in the [official Unity documentation on Matrix4x4.lossyScale](https://docs.unity3d.com/2022.3/Documentation/ScriptReference/Matrix4x4-lossyScale.html).
    description:
    is_static: false
    code_samples:
    type: DataType.Vector3
  - name: isIdentity
    summary: |
      The 'isIdentity' property returns a boolean indicating whether the matrix is the identity matrix. The identity matrix is a special type of matrix that doesn't change any vector when we multiply that vector with it. Check out the [official Unity documentation on Matrix4x4.isIdentity](https://docs.unity3d.com/2022.3/Documentation/ScriptReference/Matrix4x4-isIdentity.html) for more details.
    description:
    is_static: false
    code_samples:
    type: boolean
  - name: determinant
    summary: |
      The 'determinant' property returns the determinant of the matrix. The determinant is a special number that encapsulates some properties of the matrix. It is used for solving systems of equations, in calculus, and more. For more explanation, see the [official Unity documentation on Matrix4x4.determinant](https://docs.unity3d.com/2022.3/Documentation/ScriptReference/Matrix4x4-determinant.html).
    description:
    is_static: false
    code_samples:
    type: number
  - name: inverse
    summary: |
      The 'inverse' property provides the inverse of the matrix, assuming it exists. An inverse matrix is a matrix that, when multiplied by the original matrix, yields the identity matrix. For a deeper understanding, refer to the [official Unity documentation on Matrix4x4.inverse](https://docs.unity3d.com/2022.3/Documentation/ScriptReference/Matrix4x4-inverse.html).
    description:
    is_static: false
    code_samples:
    type: DataType.Matrix4x4
  - name: transpose
    summary: |
      The 'transpose' property returns the transpose of the matrix. The transpose of a matrix is obtained by swapping its rows with columns and vice versa. To know more about the transposition of a matrix, head over to the [official Unity documentation on Matrix4x4.transpose](https://docs.unity3d.com/2022.3/Documentation/ScriptReference/Matrix4x4-transpose.html).
    description:
    is_static: false
    code_samples:
    type: DataType.Matrix4x4
  - name: m00
    summary: |
      The 'm00' property represents the element at the first row and first column of the matrix. For more information, refer to the [official Unity documentation on Matrix4x4.m00](https://docs.unity3d.com/2022.3/Documentation/ScriptReference/Matrix4x4-m00.html).
    description:
    is_static: false
    code_samples:
    type: number
  - name: m10
    summary: |
      The 'm10' property represents the element at the second row and first column of the matrix. Check out the [official Unity documentation on Matrix4x4.m10](https://docs.unity3d.com/2022.3/Documentation/ScriptReference/Matrix4x4-m10.html) for more details.
    description:
    is_static: false
    code_samples:
    type: number
  - name: m20
    summary: |
      The 'm20' property corresponds to the element in the third row and first column of the matrix. For more information, see the [official Unity documentation on Matrix4x4.m20](https://docs.unity3d.com/2022.3/Documentation/ScriptReference/Matrix4x4-m20.html).
    description:
    is_static: false
    code_samples:
    type: number
  - name: m30
    summary: |
      The 'm30' property represents the element at the fourth row and first column of the matrix. You can learn more about it from the [official Unity documentation on Matrix4x4.m30](https://docs.unity3d.com/2022.3/Documentation/ScriptReference/Matrix4x4-m30.html).
    description:
    is_static: false
    code_samples:
    type: number
  - name: m01
    summary: |
      The 'm01' property corresponds to the element in the first row and second column of the matrix. More details are available in the [official Unity documentation on Matrix4x4.m01](https://docs.unity3d.com/2022.3/Documentation/ScriptReference/Matrix4x4-m01.html).
    description:
    is_static: false
    code_samples:
    type: number
  - name: m11
    summary: |
      The 'm11' property represents the element at the second row and second column of the matrix. For more information, refer to the [official Unity documentation on Matrix4x4.m11](https://docs.unity3d.com/2022.3/Documentation/ScriptReference/Matrix4x4-m11.html).
    description:
    is_static: false
    code_samples:
    type: number
  - name: m21
    summary: |
      The 'm21' property signifies the element at the third row and second column of the matrix. For a deeper understanding, check out the [official Unity documentation on Matrix4x4.m21](https://docs.unity3d.com/2022.3/Documentation/ScriptReference/Matrix4x4-m21.html).
    description:
    is_static: false
    code_samples:
    type: number
  - name: m31
    summary: |
      The 'm31' property denotes the element in the fourth row and second column of the matrix. For more details, see the [official Unity documentation on Matrix4x4.m31](https://docs.unity3d.com/2022.3/Documentation/ScriptReference/Matrix4x4-m31.html).
    description:
    is_static: false
    code_samples:
    type: number
  - name: m02
    summary: |
      The 'm02' property represents the element at the first row and third column of the matrix. To know more, visit the [official Unity documentation on Matrix4x4.m02](https://docs.unity3d.com/2022.3/Documentation/ScriptReference/Matrix4x4-m02.html).
    description:
    is_static: false
    code_samples:
    type: number
  - name: m12
    summary: |
      The 'm12' property denotes the element in the second row and third column of the matrix. You can learn more about it from the [official Unity documentation on Matrix4x4.m12](https://docs.unity3d.com/2022.3/Documentation/ScriptReference/Matrix4x4-m12.html).
    description:
    is_static: false
    code_samples:
    type: number
  - name: m22
    summary: |
      The 'm22' property corresponds to the element in the third row and third column of the matrix. For more information, refer to the [official Unity documentation on Matrix4x4.m22](https://docs.unity3d.com/2022.3/Documentation/ScriptReference/Matrix4x4-m22.html).
    description:
    is_static: false
    code_samples:
    type: number
  - name: m32
    summary: |
      The 'm32' property signifies the element at the fourth row and third column of the matrix. More details can be found in the [official Unity documentation on Matrix4x4.m32](https://docs.unity3d.com/2022.3/Documentation/ScriptReference/Matrix4x4-m32.html).
    description:
    is_static: false
    code_samples:
    type: number
  - name: m03
    summary: |
      The 'm03' property denotes the element in the first row and fourth column of the matrix. To know more about it, visit the [official Unity documentation on Matrix4x4.m03](https://docs.unity3d.com/2022.3/Documentation/ScriptReference/Matrix4x4-m03.html).
    description:
    is_static: false
    code_samples:
    type: number
  - name: m13
    summary: |
      The 'm13' property represents the element at the second row and fourth column of the matrix. For a deeper understanding, check out the [official Unity documentation on Matrix4x4.m13](https://docs.unity3d.com/2022.3/Documentation/ScriptReference/Matrix4x4-m13.html).
    description:
    is_static: false
    code_samples:
    type: number
  - name: m23
    summary: |
      The 'm23' property signifies the element in the third row and fourth column of the matrix. You can learn more about it from the [official Unity documentation on Matrix4x4.m23](https://docs.unity3d.com/2022.3/Documentation/ScriptReference/Matrix4x4-m23.html).
    description:
    is_static: false
    code_samples:
    type: number
  - name: m33
    summary: |
      The 'm33' property denotes the element at the fourth row and fourth column of the matrix. More details can be found in the [official Unity documentation on Matrix4x4.m33](https://docs.unity3d.com/2022.3/Documentation/ScriptReference/Matrix4x4-m33.html).
    description:
    is_static: false
    code_samples:
    type: number
  - name: zero
    summary: |
      The 'zero' property represents a Matrix4x4 where all elements are set to zero. This essentially signifies a "null" transformation, meaning no change will take place on applying this matrix to a vector or a point. See the [official Unity documentation](https://docs.unity3d.com/2022.3/Documentation/ScriptReference/Matrix4x4-zero.html) for more information on how a zero matrix can be used.
    description:
    is_static: true
    code_samples:
    type: DataType.Matrix4x4
  - name: identity
    summary: |
      The 'identity' property represents an Identity Matrix4x4. An identity matrix, when used to transform a point or a vector, leaves it unaltered, just like the number '1' in multiplication. It plays a crucial role in matrix operations and can be very useful for resetting transformations. More details can be found in the [official Unity documentation](https://docs.unity3d.com/2022.3/Documentation/ScriptReference/Matrix4x4-identity.html).
    description:
    is_static: true
    code_samples:
    type: DataType.Matrix4x4
methods:
  - name: ValidTRS
    summary: |
      The 'ValidTRS' method checks if a matrix is a valid transformation matrix. It returns a boolean indicating whether the matrix holds valid translation, rotation, and scale values. More substance regarding this can be found in [Unity's Matrix4x4.ValidTRS Documentation](https://docs.unity3d.com/2022.3/Documentation/ScriptReference/Matrix4x4.ValidTRS.html).
    description:
    is_static: false
    code_samples:
    parameters:
    returns:
      - type: boolean
        summary: Returns true if the matrix is a valid transformation matrix, otherwise false.
  - name: SetTRS
    summary: |
      The 'SetTRS' method sets the matrix to a transformation matrix, given a Vector3 for position, a Quaternion for rotation, and a Vector3 for scale. It's quick and convenient when you want to set up a transform from position, rotation and scale values. For more info, refer to [Unity's Matrix4x4.SetTRS Documentation](https://docs.unity3d.com/2022.3/Documentation/ScriptReference/Matrix4x4.SetTRS.html).
    description:
    is_static: false
    code_samples:
    parameters:
      - name: pos
        type: DataType.Vector3
        default:
        summary: The position to set in the transformation matrix.
      - name: q
        type: DataType.Quaternion
        default:
        summary: The rotation to set in the transformation matrix.
      - name: s
        type: DataType.Vector3
        default:
        summary: The scale to set in the transformation matrix.
    returns:
      - type: void
        summary:
  - name: GetColumn
    summary: |
      The 'GetColumn' method returns a Vector4 representing a specified column of the matrix. This can be helpful when you need to extract specific column information from a matrix. More explanation can be found in [Unity's Matrix4x4.GetColumn Documentation](https://docs.unity3d.com/2022.3/Documentation/ScriptReference/Matrix4x4.GetColumn.html).
    description:
    is_static: false
    code_samples:
    parameters:
      - name: index
        type: number
        default:
        summary: The index of the column to retrieve.
    returns:
      - type: DataType.Vector4
        summary: Returns a Vector4 representing the specified column of the matrix.
  - name: GetRow
    summary: |
      The 'GetRow' method returns a Vector4 representing a specified row of the matrix. This can be useful when you need to extract certain row information from a matrix. More substance regarding this is available in [Unity's Matrix4x4.GetRow Documentation](https://docs.unity3d.com/2022.3/Documentation/ScriptReference/Matrix4x4.GetRow.html).
    description:
    is_static: false
    code_samples:
    parameters:
      - name: index
        type: number
        default:
        summary: The index of the row to retrieve.
    returns:
      - type: DataType.Vector4
        summary: Returns a Vector4 representing the specified row of the matrix.
  - name: GetPosition
    summary: |
      The 'GetPosition' method gives a Vector3 representing the position stored in the transformation matrix. This is particularly useful when wanting to extract the position component from a transformation matrix. For more information, refer to [Unity's Matrix4x4.GetPosition Documentation](https://docs.unity3d.com/2022.3/Documentation/ScriptReference/Matrix4x4.GetPosition.html).
    description:
    is_static: false
    code_samples:
    parameters:
    returns:
      - type: DataType.Vector3
        summary: Returns a Vector3 representing the position stored in the matrix.
  - name: SetColumn
    summary: |
      The 'SetColumn' method sets a Vector4 to a specified column of the matrix. This method comes in handy when you want to replace a specific column of a matrix. More info can be found in [Unity's Matrix4x4.SetColumn Documentation](https://docs.unity3d.com/2022.3/Documentation/ScriptReference/Matrix4x4.SetColumn.html).
    description:
    is_static: false
    code_samples:
    parameters:
      - name: index
        type: number
        default:
        summary: The index of the column to set.
      - name: column
        type: DataType.Vector4
        default:
        summary: The vector to set in the specified column of the matrix.
    returns:
      - type: void
        summary:
  - name: SetRow
    summary: |
      The 'SetRow' method sets a Vector4 to a specified row of the matrix. You can use this method to replace a certain row of a matrix. For more information, see [Unity's Matrix4x4.SetRow Documentation](https://docs.unity3d.com/2022.3/Documentation/ScriptReference/Matrix4x4.SetRow.html).
    description:
    is_static: false
    code_samples:
    parameters:
      - name: index
        type: number
        default:
        summary: The index of the row to set.
      - name: row
        type: DataType.Vector4
        default:
        summary: The vector to set in the specified row of the matrix.
    returns:
      - type: void
        summary:
  - name: MultiplyPoint
    summary: |
      The 'MultiplyPoint' method multiplies a Matrix4x4 and a Vector3 together. It treats the input Vector3 as a point in 3D space - this means it also considers the translation stored in the matrix. To know more, see [Unity's Matrix4x4.MultiplyPoint Documentation](https://docs.unity3d.com/2022.3/Documentation/ScriptReference/Matrix4x4.MultiplyPoint.html).
    description:
    is_static: false
    code_samples:
    parameters:
      - name: point
        type: DataType.Vector3
        default:
        summary: The vector to be multiplied with the matrix.
    returns:
      - type: DataType.Vector3
        summary: Returns a Vector3 as a result of the multiplication.
  - name: MultiplyPoint3x4
    summary: |
      The 'MultiplyPoint3x4' method multiplies a Matrix4x4 and a Vector3 together. It treats the matrix as if it's a 3x4 matrix, and thus the result will not have perspective projection applied. More explanation is available in [Unity's Matrix4x4.MultiplyPoint3x4 Documentation](https://docs.unity3d.com/2022.3/Documentation/ScriptReference/Matrix4x4.MultiplyPoint3x4.html).
    description:
    is_static: false
    code_samples:
    parameters:
      - name: point
        type: DataType.Vector3
        default:
        summary: The vector to be multiplied with the matrix.
    returns:
      - type: DataType.Vector3
        summary: Returns a Vector3 as a result of the multiplication without perspective projection.
  - name: MultiplyVector
    summary: |
      The 'MultiplyVector' method multiplies a Matrix4x4 and a Vector3 together. It treats the input Vector3 as a direction rather than a point, meaning it will not consider the translation part of the matrix. For more detailed information, refer to [Unity's Matrix4x4.MultiplyVector Documentation](https://docs.unity3d.com/2022.3/Documentation/ScriptReference/Matrix4x4.MultiplyVector.html).
    description:
    is_static: false
    code_samples:
    parameters:
      - name: vector
        type: DataType.Vector3
        default:
        summary: The vector to be multiplied with the matrix.
    returns:
      - type: DataType.Vector3
        summary: Returns a Vector3 as a result of the multiplication.
  - name: Determinant
    summary: |
      The static 'Determinant' method returns the determinant of a given Matrix4x4. The determinant of a matrix is a special scalar value that can be computed from its elements and can provide useful information about the matrix. You can learn more about it from [Unity's Matrix4x4.Determinant Documentation](https://docs.unity3d.com/2022.3/Documentation/ScriptReference/Matrix4x4.Determinant.html).
    description:
    is_static: true
    code_samples:
    parameters:
      - name: m
        type: DataType.Matrix4x4
        default:
        summary: The matrix whose determinant is to be calculated.
    returns:
      - type: number
        summary: Returns the determinant of the given matrix.
  - name: TRS
    summary: |
      The static 'TRS' method creates a transformation matrix from translation, rotation, and scale. The 'TRS' stands for 'Translate, Rotate, Scale'. It returns a Matrix4x4 built from the given Vector3 of position, Quaternion of rotation and another Vector3 of scale. For a comprehensive understanding, check out [Unity's Matrix4x4.TRS Documentation](https://docs.unity3d.com/2022.3/Documentation/ScriptReference/Matrix4x4.TRS.html).
    description:
    is_static: true
    code_samples:
    parameters:
      - name: pos
        type: DataType.Vector3
        default:
        summary: The position to be included in the transformation matrix.
      - name: q
        type: DataType.Quaternion
        default:
        summary: The rotation to be included in the transformation matrix.
      - name: s
        type: DataType.Vector3
        default:
        summary: The scale to be included in the transformation matrix.
    returns:
      - type: DataType.Matrix4x4
        summary: Returns a Matrix4x4 transformation matrix created from a position, rotation, and scale.
  - name: Inverse
    summary: |
      The static 'Inverse' method computes the inverse of a given Matrix4x4. The inverse of a matrix is a matrix that, when multiplied with the original matrix, yields the identity matrix. For further detail, see [Unity's Matrix4x4.Inverse Documentation](https://docs.unity3d.com/2022.3/Documentation/ScriptReference/Matrix4x4.Inverse.html).
    description:
    is_static: true
    code_samples:
    parameters:
      - name: m
        type: DataType.Matrix4x4
        default:
        summary: The matrix to be inversed.
    returns:
      - type: DataType.Matrix4x4
        summary: Returns the inverse of the given matrix.
  - name: Transpose
    summary: |
      The static 'Transpose' method returns the transpose of a given Matrix4x4. The transpose of a matrix is a new matrix whose rows are the columns of the original matrix and whose columns are the original's rows. For more info, refer to [Unity's Matrix4x4.Transpose Documentation](https://docs.unity3d.com/2022.3/Documentation/ScriptReference/Matrix4x4.Transpose.html).
    description:
    is_static: true
    code_samples:
    parameters:
      - name: m
        type: DataType.Matrix4x4
        default:
        summary: The matrix to be transposed.
    returns:
      - type: DataType.Matrix4x4
        summary: Returns the transpose of the given matrix.
  - name: Ortho
    summary: |
      The static 'Ortho' method creates an orthogonal projection matrix. The resulting matrix can be used to transform coordinates in 3D into a 2D projection. This is particularly useful in things like 2D games or interfaces. Learn more from [Unity's Matrix4x4.Ortho Documentation](https://docs.unity3d.com/2022.3/Documentation/ScriptReference/Matrix4x4.Ortho.html).
    description:
    is_static: true
    code_samples:
    parameters:
      - name: left
        type: number
        default:
        summary: The value for the left vertical clipping plane.
      - name: right
        type: number
        default:
        summary: The value for the right vertical clipping plane.
      - name: bottom
        type: number
        default:
        summary: The value for the bottom horizontal clipping plane.
      - name: top
        type: number
        default:
        summary: The value for the top horizontal clipping plane.
      - name: zNear
        type: number
        default:
        summary: The value for the near depth clipping plane.
      - name: zFar
        type: number
        default:
        summary: The value for the far depth clipping plane.
    returns:
      - type: DataType.Matrix4x4
        summary: Returns an orthogonal projection matrix created from the specified parameters.
  - name: Perspective
    summary: |
      The static 'Perspective' method creates a perspective projection matrix from field of view, aspect ratio, and near and far clipping planes. The resulting matrix can be used to transform 3D coordinates into a 2D perspective. For a deeper understanding, refer to [Unity's Matrix4x4.Perspective Documentation](https://docs.unity3d.com/2022.3/Documentation/ScriptReference/Matrix4x4.Perspective.html).
    description:
    is_static: true
    code_samples:
    parameters:
      - name: fov
        type: number
        default:
        summary: The field of view in the y direction, measured in degrees.
      - name: aspect
        type: number
        default:
        summary: The aspect ratio, defined as width divided by height.
      - name: zNear
        type: number
        default:
        summary: The value for the near depth clipping plane.
      - name: zFar
        type: number
        default:
        summary: The value for the far depth clipping plane.
    returns:
      - type: DataType.Matrix4x4
        summary: Returns a perspective projection matrix created from the specified parameters.
  - name: LookAt
    summary: |
      The static 'LookAt' method creates a viewing matrix aimed at a target with a defined up direction. This method can be useful in a variety of situations, like setting the view matrix of a camera. More information can be found in [Unity's Matrix4x4.LookAt Documentation](https://docs.unity3d.com/2022.3/Documentation/ScriptReference/Matrix4x4.LookAt.html).
    description:
    is_static: true
    code_samples:
    parameters:
      - name: from
        type: DataType.Vector3
        default:
        summary: The position the result matrix will transform from.
      - name: to
        type: DataType.Vector3
        default:
        summary: The target point the result matrix will face towards.
      - name: up
        type: DataType.Vector3
        default:
        summary: The up direction. It must not be parallel to the direction vector pointing from 'from' to 'to'.
    returns:
      - type: DataType.Matrix4x4
        summary: Returns a viewing matrix aimed at the target from a set position and up direction.
  - name: Frustum
    summary: |
      The static 'Frustum' method creates a perspective projection matrix that represents a view frustum. A frustum is a kind of pyramid with its top cut off. It is typically what a camera in 3D space sees with certain field of view and near and far clipping planes. For more details, see [Unity's Matrix4x4.Frustum Documentation](https://docs.unity3d.com/2022.3/Documentation/ScriptReference/Matrix4x4.Frustum.html).
    description:
    is_static: true
    code_samples:
    parameters:
      - name: left
        type: number
        default:
        summary: The value for the left vertical clipping plane.
      - name: right
        type: number
        default:
        summary: The value for the right vertical clipping plane.
      - name: bottom
        type: number
        default:
        summary: The value for the bottom horizontal clipping plane.
      - name: top
        type: number
        default:
        summary: The value for the top horizontal clipping plane.
      - name: zNear
        type: number
        default:
        summary: The value for the near depth clipping plane.
      - name: zFar
        type: number
        default:
        summary: The value for the far depth clipping plane.
    returns:
      - type: DataType.Matrix4x4
        summary: Returns a perspective projection matrix that represents the specified view frustum.
  - name: Scale
    summary: |
      The static 'Scale' method forms a scaling matrix from a given Vector3. The resulting matrix can be used to scale an object in 3D space by the specified vector. More info about this can be learned from [Unity's Matrix4x4.Scale Documentation](https://docs.unity3d.com/2022.3/Documentation/ScriptReference/Matrix4x4.Scale.html).
    description:
    is_static: true
    code_samples:
    parameters:
      - name: vector
        type: DataType.Vector3
        default:
        summary: The vector by which to scale.
    returns:
      - type: DataType.Matrix4x4
        summary: Returns a scaling matrix created from the specified vector.
  - name: Translate
    summary: |
      The static 'Translate' method creates a translation matrix from a given Vector3. It can be used to move an object in 3D space by a specified vector. For more details, see [Unity's Matrix4x4.Translate Documentation](https://docs.unity3d.com/2022.3/Documentation/ScriptReference/Matrix4x4.Translate.html).
    description:
    is_static: true
    code_samples:
    parameters:
      - name: vector
        type: DataType.Vector3
        default:
        summary: The vector by which to translate.
    returns:
      - type: DataType.Matrix4x4
        summary: Returns a translation matrix created from the specified vector.
  - name: Rotate
    summary: |
      The static 'Rotate' method generates a rotation matrix from a Quaternion. The resulting matrix can be used to rotate an object in 3D space by the specified Quaternion. For more explanation, please refer to [Unity's Matrix4x4.Rotate Documentation](https://docs.unity3d.com/2022.3/Documentation/ScriptReference/Matrix4x4.Rotate.html).
    description:
    is_static: true
    code_samples:
    parameters:
      - name: q
        type: DataType.Quaternion
        default:
        summary: The quaternion by which to rotate.
    returns:
      - type: DataType.Matrix4x4
        summary: Returns a rotation matrix created from the specified quaternion.
math_operations:
  - operation: "=="
    summary: |
      The '==' operator checks if two Matrix4x4 matrices are equal, element-wise. Two matrices are considered equal if all their corresponding elements are equal. For more details, refer to [Unity's Matrix4x4.operator_eq Documentation](https://docs.unity3d.com/2022.3/Documentation/ScriptReference/Matrix4x4-operator_eq.html).
    description:
    type_a: Matrix4x4
    type_b: Matrix4x4
    return_type: boolean
    code_samples:
  - operation: "*"
    summary: |
      The '*' operator multiplies a Matrix4x4 by a Vector4. This operation results in a transformed Vector4 that has been scaled, rotated, and positioned according to the Matrix4x4. More insights can be gained from [Unity's Matrix4x4.operator_multiply Documentation](https://docs.unity3d.com/2022.3/Documentation/ScriptReference/Matrix4x4-operator_multiply.html).
    description:
    type_a: Matrix4x4
    type_b: Vector4
    return_type: Vector4
    code_samples:
