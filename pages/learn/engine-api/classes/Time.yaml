name: Time
type: classes
summary: |
  Unity's Time class gives you controls over time-related aspects in your game Universe. Imagine it as a wall-clock hanging in the game-designer's office. It helps regulate the flow of time and pace of game actions, thereby orchestrating everything from object movements to animations.

  The Time class contains a variety of properties that allow you keep track of time and frame-rate in your projects. For more information, refer to the [official Unity documentation](https://docs.unity3d.com/2022.3/Documentation/ScriptReference/Time.html).

description:
code_samples:
inherits:
tags:
  - ServerAndClient
constructors:
properties:
  - name: deltaTime
    summary: |
      'deltaTime' represents the time in seconds it took to complete the last frame. This is frequently used for smooth object motion or time-related calculations. As deltaTime varies between frames, it reflects real-world time more than game time. Read more at [Unity's deltaTime documentation](https://docs.unity3d.com/2022.3/Documentation/ScriptReference/Time-deltaTime.html).
    description:
    is_static: false
    tags:
      - ServerAndClient
    code_samples: |
      ```lua
        self.Update:Connect(function()
          print("This frame took " .. Time.deltaTime .. "seconds")
        end)
      ```
    type: number
  - name: fixedDeltaTime
    summary: |
      'fixedDeltaTime' signifies the time in seconds between physics updates (FixedUpdate calls). Unlike 'deltaTime', 'fixedDeltaTime' is consistent between frames, making it pivotal for physics calculations where consistent performance is key. For more details, refer to [Unity's fixedDeltaTime documentation](https://docs.unity3d.com/2022.3/Documentation/ScriptReference/Time-fixedDeltaTime.html).
    description:
    is_static: false
    code_samples: |
      ```lua
        self.FixedUpdate:Connect(function()
          print("This physics step took " .. Time.fixedDeltaTime .. " seconds and will always take that long, unless manually changed")
        end)
      ```
    type: number
methods:
math_operations:
