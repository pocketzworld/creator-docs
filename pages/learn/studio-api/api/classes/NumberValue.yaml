name: NumberValue
type: classes
summary: |
  The NumberValue class is used to store a single number value, which unlike Class.IntValue supports decimal points. It is a subclass of the Class.Value and it is recommended to check out that documentation before continuing on. This class is useful for tracking a single number value that all clients should be synchronized on.
description:
code_samples: |
  #### Synchronizing a Number
  description: This example demonstrates how to use a NumberValue to synchronize a random number across all clients.
  ```lua
    local randomValue : NumberValue = NumberValue.new("randomValue", 0.0)
    local onGenNewRandomValue : Event = Event.new("onGenNewRandomValue")

    -- not local so that another script can find this one and call this function
    function GenNewRandomNumber()
      onGenNewRandomValue:FireServer()
    end

    local function Client()
      randomValue.Changed:Connect(function()
          print("The new random value is " .. randomValue.value)
      end)
    end

    local function Server()
      onGenNewRandomValue:Connect(function()
          randomValue.value = math.random()
      end)
    end

    if server then
      Server()
    else
      Client()
    end
  ```
inherits:
tags:
  - ServerAndClient
constructors:
  - name: new
    summary:
    is_static: true
    tags:
      - ServerAndClient
    code_samples:
    parameters:
      - name: name
        type: string
        default:
        summary: The name of the NumberValue. This must be unique as it is used as the key to synchronize the value across all clients.
      - name: initialValue
        type: number
        default:
        summary: The initial value of the NumberValue.
    returns:
      - type: Class.NumberValue
        summary: An NumberValue instance with the specified value.
properties:
  - name: value
    summary: |
      The currently synchronized number value of the NumberValue. This is the value that all clients will be synchronized on and if changed, notified that the value is now different from the Value.Changed event.
    is_static: false
    tags:
      - ServerAndClient
    code_samples:
    type: number
methods:
math_operations:
