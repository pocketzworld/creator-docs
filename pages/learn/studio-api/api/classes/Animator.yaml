name: Animator
type: classes
summary: The Animator class is a core component in Unity for managing animations. It works with the Animator Controller to manage states and transitions in a state machine, enabling complex animation setups. This class provides a variety of methods and properties to control animations on GameObjects, essential for dynamic and interactive game environments.
code_samples:
inherits:
  - Class.Behaviour
constructors:
properties:
  - name: isOptimizable
    summary: Indicates if the Animator can be optimized for performance.
    is_static: false
    code_samples:
    type: boolean
  - name: isHuman
    summary: Checks if the Animator controls a humanoid model.
    is_static: false
    code_samples:
    type: boolean
  - name: hasRootMotion
    summary: Determines if the Animator's animation data contains root motion.
    is_static: false
    code_samples:
    type: boolean
  - name: humanScale
    summary: Provides the scale of the humanoid Avatar in meters.
    is_static: false
    code_samples:
    type: number
  - name: isInitialized
    summary: Checks if the Animator is initialized and ready to control animations.
    is_static: false
    code_samples:
    type: boolean
  - name: deltaPosition
    summary: Returns the GameObject's position change during the last frame.
    is_static: false
    code_samples:
    type: DataType.Vector3
  - name: deltaRotation
    summary: Provides the rotation difference of the GameObject during the last frame.
    is_static: false
    code_samples:
    type: DataType.Quaternion
  - name: velocity
    summary: Gives the velocity vector of the GameObject controlled by the Animator.
    is_static: false
    code_samples:
    type: DataType.Vector3
  - name: angularVelocity
    summary: Returns the angular velocity vector of the GameObject.
    is_static: false
    code_samples:
    type: DataType.Vector3
  - name: rootPosition
    summary: Provides the position of the root of the GameObject controlled by the Animator.
    is_static: false
    code_samples:
    type: DataType.Vector3
  - name: rootRotation
    summary: Offers the rotation of the root of the GameObject controlled by the Animator.
    is_static: false
    code_samples:
    type: DataType.Quaternion
  - name: applyRootMotion
    summary: Controls whether root motion in animations should be applied to the GameObject.
    is_static: false
    code_samples:
    type: boolean
  - name: hasTransformHierarchy
    summary: Indicates if the Animator has a transform hierarchy.
    is_static: false
    code_samples:
    type: boolean
  - name: gravityWeight
    summary: Represents the gravity weight based on current animations being played.
    is_static: false
    code_samples:
    type: number
  - name: bodyPosition
    summary: Allows getting or setting the position of the body mass.
    is_static: false
    code_samples:
    type: DataType.Vector3
  - name: bodyRotation
    summary: Lets you get or set the rotation of the body mass.
    is_static: false
    code_samples:
    type: DataType.Quaternion
  - name: stabilizeFeet
    summary: Controls feet stabilization for plant and IK feet.
    is_static: false
    code_samples:
    type: boolean
  - name: layerCount
    summary: Represents the total number of layers within the Animator.
    is_static: false
    code_samples:
    type: number
  - name: parameterCount
    summary: Pertains to the count of parameters in the Animator Controller.
    is_static: false
    code_samples:
    type: number
  - name: feetPivotActive
    summary: A blend variable for calculating the position of each foot during a transition.
    is_static: false
    code_samples:
    type: number
  - name: pivotWeight
    summary: Indicates the current weight of the pivot, as determined by foot animations.
    is_static: false
    code_samples:
    type: number
  - name: pivotPosition
    summary: Offers the current position of the pivot in the avatar root, relative to world space.
    is_static: false
    code_samples:
    type: DataType.Vector3
  - name: isMatchingTarget
    summary: Indicates whether the character is currently matching a target via script.
    is_static: false
    code_samples:
    type: boolean
  - name: speed
    summary: Allows manipulation of the Animator's playback speed.
    is_static: false
    code_samples:
    type: number
  - name: targetPosition
    summary: Gets the target position for the MatchTarget function.
    is_static: false
    code_samples:
    type: DataType.Vector3
  - name: targetRotation
    summary: Fetches the target rotation for the MatchTarget function.
    is_static: false
    code_samples:
    type: DataType.Quaternion
  - name: avatarRoot
    summary: Refers to the root Transform of the humanoid Avatar in the animator.
    is_static: false
    code_samples:
    type: Class.Transform
  - name: playbackTime
    summary: Gets the current playback time of the Animator recorder.
    is_static: false
    code_samples:
    type: number
  - name: recorderStartTime
    summary: Represents the start time of the first frame of the Animator recorder.
    is_static: false
    code_samples:
    type: number
  - name: recorderStopTime
    summary: Provides the stop time of the last frame of the Animator recorder.
    is_static: false
    code_samples:
    type: number
  - name: hasBoundPlayables
    summary: Indicates whether any playable graphs are attached to the Animator.
    is_static: false
    code_samples:
    type: boolean
  - name: layersAffectMassCenter
    summary: Controls whether the mass center is affected by all layers or only the base layer.
    is_static: false
    code_samples:
    type: boolean
  - name: leftFeetBottomHeight
    summary: Provides the position of the bottom of the left foot relative to the root.
    is_static: false
    code_samples:
    type: number
  - name: rightFeetBottomHeight
    summary: Represents the position of the bottom of the right foot relative to the root.
    is_static: false
    code_samples:
    type: number
  - name: logWarnings
    summary: Controls whether warnings are logged for issues with AnimatorController setup.
    is_static: false
    code_samples:
    type: boolean
  - name: fireEvents
    summary: Dictates whether the Animator is allowed to emit events.
    is_static: false
    code_samples:
    type: boolean
  - name: keepAnimatorStateOnDisable
    summary: Keeps the current Animator state and its time when the GameObject is disabled.
    is_static: false
    code_samples:
    type: boolean
  - name: writeDefaultValuesOnDisable
    summary: Writes default values into the GameObject when the animator component is disabled.
    is_static: false
    code_samples:
    type: boolean
methods:
  - name: GetFloat
    summary: Retrieves a float parameter from the Animator.
    is_static: false
    code_samples:
    parameters:
      - name: name
        type: string
        default:
        summary: The name of the parameter to retrieve.
    returns:
      - type: number
        summary: The float value of the specified parameter.
  - name: SetFloat
    summary: Sets the value of a float parameter.
    is_static: false
    code_samples:
    parameters:
      - name: name
        type: string
        default:
        summary: Name of the parameter.
      - name: value
        type: number
        default:
        summary: The value to be set.
    returns:
      - type: void
        summary: This method doesn't return a value.
  - name: GetBool
    summary: Retrieves the value of a boolean parameter in the Animator.
    is_static: false
    code_samples:
    parameters:
      - name: name
        type: string
        default:
        summary: Name of the parameter.
    returns:
      - type: boolean
        summary: The current state (true or false) of the specified parameter.
  - name: SetBool
    summary: Sets the value of a boolean parameter in the Animator.
    is_static: false
    code_samples:
    parameters:
      - name: name
        type: string
        default:
        summary: Name of the parameter.
      - name: value
        type: boolean
        default:
        summary: The value to be set.
    returns:
      - type: void
        summary: This method doesn't return a value.
  - name: GetInteger
    summary: Fetches the value of an integer parameter in the Animator.
    is_static: false
    code_samples:
    parameters:
      - name: name
        type: string
        default:
        summary: Name of the parameter.
    returns:
      - type: number
        summary: The current state of the specified parameter.
  - name: SetInteger
    summary: Assigns an integer value to an integer parameter in the Animator.
    is_static: false
    code_samples:
    parameters:
      - name: name
        type: string
        default:
        summary: Name of the parameter.
      - name: value
        type: number
        default:
        summary: The value to be set.
    returns:
      - type: void
        summary: This method doesn't return a value.
  - name: SetTrigger
    summary: Activates a trigger parameter to change the animator's state.
    is_static: false
    code_samples:
    parameters:
      - name: name
        type: string
        default:
        summary: Name of the trigger parameter.
    returns:
      - type: void
        summary: This method doesn't return a value.
  - name: ResetTrigger
    summary: Clears a trigger parameter.
    is_static: false
    code_samples:
    parameters:
      - name: name
        type: string
        default:
        summary: Name of the trigger parameter to reset.
    returns:
      - type: void
        summary: This method doesn't return a value.
  - name: IsParameterControlledByCurve
    summary: Checks if a parameter is controlled by a curve.
    is_static: false
    code_samples:
    parameters:
      - name: name
        type: string
        default:
        summary: The name of the parameter to check.
    returns:
      - type: boolean
        summary: True if the parameter is controlled by a curve, false otherwise.
  - name: SetLookAtPosition
    summary: Sets a target position for the character's head to look at.
    is_static: false
    code_samples:
    parameters:
      - name: lookAtPosition
        type: DataType.Vector3
        default:
        summary: Position for the character to look at.
    returns:
      - type: void
        summary: This method doesn't return a value.
  - name: SetLookAtWeight
    summary: Sets the weights for the head and body parts to look at a position.
    is_static: false
    code_samples:
    parameters:
      - name: weight
        type: number
        default:
        summary: The weight by which the body parts follow the lookAtPosition.
    returns:
      - type: void
        summary: This method doesn't return a value.
  - name: GetLayerName
    summary: Retrieves the name of a layer by its index.
    is_static: false
    code_samples:
    parameters:
      - name: layerIndex
        type: number
        default:
        summary: The index of the layer.
    returns:
      - type: string
        summary: The name of the layer.
  - name: GetLayerIndex
    summary: Finds the index of a layer by its name.
    is_static: false
    code_samples:
    parameters:
      - name: layerName
        type: string
        default:
        summary: The name of the layer.
    returns:
      - type: number
        summary: The index of the layer.
  - name: GetLayerWeight
    summary: Gets the weight of a layer, defining its influence on the final animation.
    is_static: false
    code_samples:
    parameters:
      - name: layerIndex
        type: number
        default:
        summary: The index of the layer.
    returns:
      - type: number
        summary: The weight of the layer.
  - name: SetLayerWeight
    summary: Sets the weight of a layer, adjusting its influence on the final animation outcome.
    is_static: false
    code_samples:
    parameters:
      - name: layerIndex
        type: number
        default:
        summary: The index of the layer.
      - name: weight
        type: number
        default:
        summary: The weight to set for the layer.
    returns:
      - type: void
        summary: This method doesn't return a value.
  - name: GetCurrentAnimatorClipInfoCount
    summary: Returns the count of AnimatorClipInfo instances for the current layer.
    is_static: false
    code_samples:
    parameters:
      - name: layerIndex
        type: number
        default:
        summary: The index of the layer.
    returns:
      - type: number
        summary: The count of AnimatorClipInfo instances.
  - name: GetNextAnimatorClipInfoCount
    summary: Gets the count of AnimatorClipInfo for the next layer the animator will transition to.
    is_static: false
    code_samples:
    parameters:
      - name: layerIndex
        type: number
        default:
        summary: The index of the layer.
    returns:
      - type: number
        summary: The count of AnimatorClipInfo instances for the next layer.
  - name: IsInTransition
    summary: Checks if the animator is in a transition between animations in the state machine.
    is_static: false
    code_samples:
    parameters:
      - name: layerIndex
        type: number
        default:
        summary: The index of the layer.
    returns:
      - type: boolean
        summary: True if the animator is in transition, false otherwise.
  - name: InterruptMatchTarget
    summary: Interrupts automatic target matching, allowing manual control.
    is_static: false
    code_samples:
    parameters:
    returns:
      - type: void
        summary: This method doesn't return a value.
  - name: CrossFadeInFixedTime
    summary: Gradually blends from the current animation to another over a fixed time.
    is_static: false
    code_samples:
    parameters:
      - name: stateName
        type: string
        default:
        summary: The name of the state to transition to.
      - name: fixedTransitionDuration
        type: number
        default:
        summary: The duration of the transition.
    returns:
      - type: void
        summary: This method doesn't return a value.
  - name: WriteDefaultValues
    summary: Writes default values to the Animator, resetting runtime modifications.
    is_static: false
    code_samples:
    parameters:
    returns:
      - type: void
        summary: This method doesn't return a value.
  - name: CrossFade
    summary: Transitions from the current state to another over a relative duration.
    is_static: false
    code_samples:
    parameters:
      - name: stateName
        type: string
        default:
        summary: The name of the state.
      - name: normalizedTransitionDuration
        type: number
        default:
        summary: Duration of the transition relative to animation length.
      - name: layer
        type: number
        default:
        summary: Index of the layer.
      - name: normalizedTimeOffset
        type: number
        default:
        summary: Adjusts the starting point of the transition.
    returns:
      - type: void
        summary: This method doesn't return a value.
  - name: PlayInFixedTime
    summary: Plays an animation state at a specified time scale, unaffected by Animator speed.
    is_static: false
    code_samples:
    parameters:
      - name: stateName
        type: string
        default:
        summary: The name of the state to play.
      - name: layer
        type: number
        default:
        summary: The layer index.
    returns:
      - type: void
        summary: This method doesn't return a value.
  - name: Play
    summary: Plays an animation state, allowing direct control over animation playback.
    is_static: false
    code_samples:
    parameters:
      - name: stateName
        type: string
        default:
        summary: The name of the state.
      - name: layer
        type: number
        default:
        summary: The layer index.
    returns:
      - type: void
        summary: This method doesn't return a value.
  - name: StartPlayback
    summary: Begins animator playback mode, useful for testing Animator functionality.
    is_static: false
    code_samples:
    parameters:
    returns:
      - type: void
        summary: This method doesn't return a value.
  - name: StopPlayback
    summary: Stops animator playback mode initiated by StartPlayback.
    is_static: false
    code_samples:
    parameters:
    returns:
      - type: void
        summary: This method doesn't return a value.
  - name: StartRecording
    summary: Starts recording the Animator in play mode for analysis or replaying sequences.
    is_static: false
    code_samples:
    parameters:
      - name: frameCount
        type: number
        default:
        summary: Number of frames to record.
    returns:
      - type: void
        summary: This method doesn't return a value.
  - name: StopRecording
    summary: Stops recording started by StartRecording, controlling recording duration.
    is_static: false
    code_samples:
    parameters:
    returns:
      - type: void
        summary: This method doesn't return a value.
  - name: HasState
    summary: Checks if a specific state exists within a layer of the Animator.
    is_static: false
    code_samples:
    parameters:
      - name: layerIndex
        type: number
        default:
        summary: The index of the layer.
      - name: stateID
        type: number
        default:
        summary: The ID of the state to check for existence.
    returns:
      - type: boolean
        summary: True if the state exists in the specified layer, false otherwise.
  - name: Update
    summary: Manually advances the Animator state machine by a specified amount of time.
    is_static: false
    code_samples:
    parameters:
      - name: deltaTime
        type: number
        default:
        summary: The amount of time to advance the state machine.
    returns:
      - type: void
        summary: This method doesn't return a value.
  - name: Rebind
    summary: Resets the Animator to its default state, removing all runtime modifications.
    is_static: false
    code_samples:
    parameters:
    returns:
      - type: void
        summary: This method doesn't return a value.
  - name: ApplyBuiltinRootMotion
    summary: Applies built-in root motion from animation clips, if present.
    is_static: false
    code_samples:
    parameters:
    returns:
      - type: void
        summary: This method doesn't return a value.
  - name: StringToHash
    summary: Converts a string into a hash ID for efficient parameter identification.
    is_static: true
    code_samples:
    parameters:
      - name: name
        type: string
        default:
        summary: The string to convert into a hash ID.
    returns:
      - type: number
        summary: The hash ID of the string.
math_operations:
