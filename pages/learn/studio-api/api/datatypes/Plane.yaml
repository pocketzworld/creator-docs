name: Plane
type: datatypes
summary: |
  Represents a plane in 3D space defined by a normal vector and a distance from the origin. Used for geometric calculations like intersection points, containment tests, and distance measurements.
description:
code_samples:
inherits:
constructors:
  - name: new
    summary: |
      Creates a new plane with the specified normal and a point on the plane.
    is_static: true
    code_samples:
    parameters:
      - name: normal
        type: DataType.Vector3
        default:
        summary: The normal vector of the plane.
      - name: point
        type: DataType.Vector3
        default:
        summary: A point on the plane.
    returns:
      - type: DataType.Plane
        summary: Returns a new Plane instance.
properties:
  - name: normal
    summary: |
      The normal vector of the plane, perpendicular to its surface.
    is_static: false
    code_samples:
    type: DataType.Vector3
  - name: distance
    summary: |
      The shortest distance between the plane and the origin along its normal.
    is_static: false
    code_samples:
    type: number
  - name: flipped
    summary: |
      Returns a new plane with the normal vector flipped.
    is_static: false
    code_samples:
    type: DataType.Plane
methods:
  - name: Raycast
    summary: |
      Determines if a ray intersects the plane and returns the intersection point distance.
    is_static: false
    code_samples:
    parameters:
      - name: ray
        type: DataType.Ray
        default:
        summary: The ray to test for intersection.
    returns:
      - type: (boolean, number)
        summary: A tuple containing intersection status and distance.
  - name: SetNormalAndPosition
    summary: |
      Sets the normal vector and a point on the plane to redefine its position.
    is_static: false
    code_samples:
    parameters:
      - name: inNormal
        type: DataType.Vector3
        default:
        summary: The new normal vector of the plane.
      - name: inPoint
        type: DataType.Vector3
        default:
        summary: A new point on the plane.
    returns:
      - type: void
        summary:
  - name: Set3Points
    summary: |
      Recalculates the plane to contain three specified points.
    is_static: false
    code_samples:
    parameters:
      - name: a
        type: DataType.Vector3
        default:
        summary: The first point.
      - name: b
        type: DataType.Vector3
        default:
        summary: The second point.
      - name: c
        type: DataType.Vector3
        default:
        summary: The third point.
    returns:
      - type: void
        summary:
  - name: Flip
    summary: |
      Flips the plane's normal vector.
    is_static: false
    code_samples:
    parameters:
    returns:
      - type: void
        summary:
  - name: Translate
    summary: |
      Moves the plane by a specified offset in 3D space.
    is_static: true
    code_samples:
    parameters:
      - name: plane
        type: DataType.Plane
        default:
        summary: The plane to translate.
      - name: translation
        type: DataType.Vector3
        default:
        summary: The translation offset.
    returns:
      - type: DataType.Plane
        summary: Returns the translated plane.
  - name: ClosestPointOnPlane
    summary: |
      Finds the point on the plane closest to a given point.
    is_static: false
    code_samples:
    parameters:
      - name: point
        type: DataType.Vector3
        default:
        summary: The point in 3D space.
    returns:
      - type: DataType.Vector3
        summary: Returns the closest point on the plane.
  - name: GetDistanceToPoint
    summary: |
      Calculates the shortest distance from a point to the plane.
    is_static: false
    code_samples:
    parameters:
      - name: point
        type: DataType.Vector3
        default:
        summary: The point to calculate the distance from.
    returns:
      - type: number
  - name: GetSide
    summary: |
      Determines which side of the plane a point lies on.
    is_static: false
    code_samples:
    parameters:
      - name: point
        type: DataType.Vector3
        default:
        summary: The point to test.
    returns:
      - type: boolean
        summary: Returns true if the point is on the same side as the plane's normal.
  - name: SameSide
    summary: |
      Checks if two points are on the same side of the plane.
    is_static: false
    code_samples:
    parameters:
      - name: inPt0
        type: DataType.Vector3
        default:
        summary: The first point.
      - name: inPt1
        type: DataType.Vector3
        default:
        summary: The second point.
    returns:
      - type: boolean
        summary: Returns true if the points are on the same side of the plane.
  - name: Translate
    summary: |
      Moves the plane in 3D space by a specified offset without changing its normal direction.
    is_static: true
    code_samples:
    parameters:
      - name: plane
        type: DataType.Plane
        default:
        summary: The plane to translate.
      - name: translation
        type: DataType.Vector3
        default:
        summary: The translation offset.
    returns:
      - type: DataType.Plane
        summary: Returns a new Plane instance that has been translated.
math_operations:
