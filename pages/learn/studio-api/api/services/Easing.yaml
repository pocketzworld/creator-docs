name: Easing
type: classes
summary: |
  The Easing service provides a set of easing functions that can be used to create smooth animations.

description:
code_samples:
inherits:
constructors:
properties:
methods:
  - name: Quadratic
    summary:
    is_static: true
    code_samples: |
      ```lua
      local t = 0.5
      local result = Easing.Quadratic(t)

      print(result)
      ```
    parameters:
      - name: t
        type: number
        default:
        summary:
    returns:
      - type: number
        summary:
  - name: Cubic
    summary:
    is_static: true
    code_samples: |
      ```lua
      local t = 0.5
      local result = Easing.Cubic(t)

      print(result)
      ```
    parameters:
      - name: t
        type: number
        default:
        summary:
    returns:
      - type: number
        summary:
  - name: Back
    summary:
    is_static: true
    code_samples: |
      ```lua
      local t = 0.5
      local p = 2
      local result = Easing.Back(t, p)

      print(result)
      ```
    parameters:
      - name: t
        type: number
        default:
        summary:
      - name: p
        type: number
        default:
        summary:
    returns:
      - type: number
        summary:
  - name: Circle
    summary: 
    is_static: true
    code_samples: |
      ```lua
      local t = 0.5
      local result = Easing.Circle(t)

      print(result)
      ```
    parameters:
      - name: t
        type: number
        default:
        summary:
    returns:
      - type: number
        summary:
  - name: Exponential
    summary:
    is_static: true
    code_samples: |
      ```lua
      local t = 0.5
      local p = 2
      local result = Easing.Exponential(t, p)

      print(result)
      ```
    parameters:
      - name: t
        type: number
        default:
        summary:
      - name: p
        type: number
        default:
        summary:
    returns:
      - type: number
        summary:
  - name: Sine
    summary:
    is_static: true
    code_samples: |
      ```lua
      local t = 0.5
      local result = Easing.Sine(t)

      print(result)
      ```
    parameters:
      - name: t
        type: number
        default:
        summary:
    returns:
      - type: number
        summary:
  - name: CubicBezier
    summary:
    is_static: true
    code_samples: |
      ```lua
      local t = 0.5
      local x1 = 0.1
      local y1 = 0.2
      local x2 = 0.3
      local y2 = 0.4
      local result = Easing.CubicBezier(t, x1, y1, x2, y2)

      print(result)
      ```
    parameters:
      - name: t
        type: number
        default:
        summary:
      - name: x1
        type: number
        default:
        summary:
      - name: y1
        type: number
        default:
        summary:
      - name: x2
        type: number
        default:
        summary:
      - name: y2
        type: number
        default:
        summary:
    returns:
      - type: number
        summary:
  - name: Bounce
    summary:
    is_static: true
    code_samples: |
      ```lua
      local t = 0.5
      local bounces = 3
      local bounciness = 2
      local result = Easing.Bounce(t, bounces, bounciness)

      print(result)
      ```
    parameters:
      - name: t
        type: number
        default:
        summary:
      - name: bounces
        type: number
        default:
        summary:
      - name: bounciness
        type: number
        default:
        summary:
    returns:
      - type: number
        summary:
  - name: Elastic
    summary:
    is_static: true
    code_samples: |
      ```lua
      local t = 0.5
      local oscillations = 3
      local springiness = 2
      local result = Easing.Elastic(t, oscillations, springiness)

      print(result)
      ```
    parameters:
      - name: t
        type: number
        default:
        summary:
      - name: oscillations
        type: number
        default:
        summary:
      - name: springiness
        type: number
        default:
        summary:
    returns:
      - type: number
        summary:
