name: Character
type: classes
summary: Represents an in-game character, providing properties and methods to control its movement, appearance, and interaction within the game environment.
description:
code_samples:
inherits:
  - Class.Behaviour
constructors:
properties:
  - name: destination
    summary: |

    description:
    is_static: false
    code_samples:
    type: DataType.Vector3
  - name: isMoving
    summary: Indicates whether the character is currently moving.
    is_static: false
    code_samples: |
      ```lua
      local player = client.localPlayer

      print(tostring(player.character.isMoving))
      ```
    type: boolean
  - name: distanceToDestination
    summary: Returns the distance from the character to its destination.
    is_static: false
    code_samples: |
      ```lua
      local player = client.localPlayer

      print(player.character.distanceToDestination)
      ```
    type: number
  - name: destination
    summary: The target destination of the character in the game world.
    is_static: false
    code_samples: |
      ```lua
      local player = client.localPlayer

      player.character.destination = Vector3.New(0, 0, 0)
      ```
    type: DataType.Vector3
  - name: anchor
    summary: |

    description:
    is_static: false
    code_samples:
    type: Class.Anchor
  - name: isAnchored
    summary: |

    description:
    is_static: false
    code_samples:
    type: boolean
  - name: usePathfinding
    summary: When set to true, the character uses pathfinding to navigate to its destination.
    description:
    is_static: false
    code_samples: |
      ```lua
      local player = client.localPlayer

      player.character.usePathfinding = true
      ```
    type: boolean
  - name: renderLayer
    summary: Specifies the rendering layer of the character for drawing order.
    is_static: false
    code_samples: |
      ```lua
      local player = client.localPlayer

      player.character.renderLayer = 1
      ```
    type: number
  - name: renderPosition
    summary: The position of the character in the game world for rendering purposes.
    is_static: false
    code_samples: |
      ```lua
      local player = client.localPlayer

      player.character.renderPosition = Vector3.New(0, 0, 0)
      ```
    type: DataType.Vector3
  - name: renderRotation
    summary: The rotation of the character in the game world for rendering purposes.
    is_static: false
    code_samples: |
      ```lua
      local player = client.localPlayer

      player.character.renderRotation = Quaternion.New(0, 0, 0, 1)
      ```
    type: DataType.Quaternion
  - name: renderScale
    summary: The scale of the character in the game world for rendering purposes.
    is_static: false
    code_samples: |
      ```lua
      local player = client.localPlayer

      player.character.renderScale = Vector3.New(1, 1, 1)
      ```
    type: DataType.Vector3
  - name: player
    summary: Reference to the player object that controls or owns the character.
    is_static: false
    code_samples: |
      ```lua
      local player = client.localPlayer

      print(player.character.player)
      ```
    type: Class.Player
  - name: StateChanged
    summary: An event that is triggered when the character's state changes.
    is_static: false
    code_samples: |
      ```lua
      local player = client.localPlayer

      player.character.StateChanged:Connect(function(state)
        print("Character state changed to " .. state)
      end)
      ```
    type: Class.Event
  - name: MoveFinished
    summary: An event that is triggered when the character finishes moving to a destination.
    is_static: false
    code_samples: |
      ```lua
      local player = client.localPlayer

      player.character.MoveFinished:Connect(function()
        print("Character has finished moving.")
      end)
      ```
    type: Class.Event
  - name: AnimationEvent
    summary: An event that is triggered when an animation event occurs on the character.
    description:
    is_static: false
    code_samples: |
      ```lua
      local player = client.localPlayer

      player.character.AnimationEvent:Connect(function(event)
        print("Animation event: " .. event)
      end)
      ```
    type: Class.Event
  - name: state
    summary: The current state of the character.
    description:
    is_static: false
    code_samples: |
      ```lua
      local player = client.localPlayer

      print(player.character.state)
      ```
    type: number
  - name: speed
    summary: The movement speed of the character.
    description:
    is_static: false
    code_samples: |
      ```lua
      local player = client.localPlayer

      player.character.speed = 10
      ```
    type: number
methods:
  - name: Teleport
    summary: Teleports the character to a specified position.
    description:
    is_static: false
    code_samples: |
      ```lua
      local player = client.localPlayer

      player.character:Teleport(Vector3.New(0, 0, 0))
      ```
    parameters:
      - name: to
        type: DataType.Vector3
        default:
        summary:
      - name: callback
        type: Class.LuaFunction
        default:
        summary:
    returns:
      - type: boolean
        summary:
  - name: SetIdle
    summary: Sets the character to an idle state.
    is_static: false
    code_samples: |
      ```lua
      local player = client.localPlayer

      player.character:SetIdle()
      ```
    parameters:
    returns:
      - type: void
        summary:
  - name: PlayEmote
    summary: Plays a specified emote animation on the character.
    is_static: false
    code_samples: |
      ```lua
      local player = client.localPlayer

      player.character:PlayEmote("idle-dance-casual")
      ```
    parameters:
      - name: emoteName
        type: string
        default:
        summary: The name of the emote to play.
      - name: loop
        type: boolean
        default:
        summary: Whether the emote should loop.
      - name: callback
        type: Class.LuaFunction
        default:
        summary: A callback function to execute when the emote playback is complete.
    returns:
      - type: void
        summary:
  - name: MoveTo
    summary: Moves the character to a specified position.
    is_static: false
    code_samples: |
      ```lua
      local player = client.localPlayer

      player.character:MoveTo(Vector3.New(0, 0, 0))
      ```
    parameters:
      - name: position
        type: DataType.Vector3
        default:
        summary: The target position for the character to move to.
      - name: areaMask
        type: number
        default:
        summary: An optional mask to specify allowed movement areas.
      - name: callback
        type: Class.LuaFunction
        default:
        summary: A callback function to execute when movement is complete.
    returns:
      - type: boolean
        summary: Returns true if movement is successfully initiated.
  - name: MoveWithinRangeOf
    summary: Moves the character within a specified range of a position.
    is_static: false
    code_samples: |
      ```lua
      local player = client.localPlayer

      player.character:MoveWithinRangeOf(Vector3.New(0, 0, 0), 5)
      ```
    parameters:
      - name: position
        type: DataType.Vector3
        default:
        summary: The target position for the character to approach.
      - name: distance
        type: number
        default:
        summary: The desired distance from the target position.
      - name: areaMask
        type: number
        default:
        summary: An optional mask to specify allowed movement areas.
      - name: callback
        type: Class.LuaFunction
        default:
        summary: A callback function to execute when movement is complete.
    returns:
      - type: boolean
        summary: Returns true if movement is successfully initiated.
  - name: TeleportToAnchor
    summary: |

    description:
    is_static: false
    code_samples:
    parameters:
      - name: anchor
        type: Class.Anchor
        default:
        summary:
      - name: callback
        type: Class.LuaFunction
        default:
        summary:
    returns:
      - type: boolean
        summary:
  - name: MoveToAnchor
    summary: |

    description:
    is_static: false
    code_samples:
    parameters:
      - name: anchor
        type: Class.Anchor
        default:
        summary:
      - name: distance
        type: number
        default:
        summary:
      - name: areaMask
        type: number
        default:
        summary:
      - name: callback
        type: Class.LuaFunction
        default:
        summary:
    returns:
      - type: boolean
        summary:
  - name: TweenRenderPosition
    summary: Smoothly transitions the character's render position from one point to another.
    is_static: false
    code_samples: |
      ```lua
      local player = client.localPlayer

      player.character:TweenRenderPosition(Vector3.New(0, 0, 0), Vector3.New(10, 0, 0))
      ```
    parameters:
      - name: from
        type: DataType.Vector3
        default:
        summary: The starting position for the tween.
      - name: to
        type: DataType.Vector3
        default:
        summary: The ending position for the tween.
    returns:
      - type: DataType.Tween
        summary: A Tween object representing the transition.
  - name: TweenRenderPositionTo
    summary: Initiates a smooth transition for the character's render position to a specified destination.
    is_static: false
    code_samples: |
      ```lua
      local player = client.localPlayer

      player.character:TweenRenderPositionTo(Vector3.New(10, 0, 0))
      ```
    parameters:
      - name: to
        type: DataType.Vector3
        default:
        summary: The target position for the character's render position.
    returns:
      - type: DataType.Tween
        summary: A Tween object representing the transition.
  - name: SetOutfit
    summary: Sets the character's outfit to a specified asset.
    is_static: false
    code_samples:
    parameters:
      - name: outfit
        type: Class.CharacterOutfit
        default:
        summary: The outfit asset to apply to the character.
    returns:
      - type: void
        summary:
  - name: ResetOutfit
    summary: Resets the character's outfit to its default appearance.
    is_static: false
    code_samples:
    parameters:
    returns:
      - type: void
        summary:
  - name: RemoveOutfit
    summary: Removes the character's current outfit.
    is_static: false
    code_samples:
    parameters:
      - name: outfit
        type: Class.CharacterOutfit
        default:
        summary: The outfit asset to remove from the character.
    returns:
      - type: void
        summary:
  - name: AddOutfit
    summary: Adds an outfit to the character's current appearance.
    is_static: false
    code_samples:
    parameters:
      - name: outfit
        type: Class.CharacterOutfit
        default:
        summary: The outfit asset to add to the character.
    returns:
      - type: void
        summary:
